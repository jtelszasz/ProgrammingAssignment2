demo()
colors
ls
a <- c(1,3,6,4)
a
a[1]
a[3]
a[6]
a[2]
justin = ['j','u','s','t','i','n']
justin = c('j','u','s','t','i','n')
justin
justin = 'justin'
justin
justin = c['justin']
justin = c('justin')
justin
justin = 2
justin <- 2
install.packages('KernSmooth')
packageDescription('KernSmooth')
library('KernSmooth')
setwd("~/Google Drive/Coursera/JHU Data Sci Specialization/02 R Programming/02 Programming/ProgrammingAssignment2")
test_matrix = matrix(c(2,3,2,1,2,1,1,1,2), 3,3)
source('~/Google Drive/Coursera/JHU Data Sci Specialization/02 R Programming/02 Programming/ProgrammingAssignment2/cachematrix.R')
test_cache = makeCacheMatrix(test_matrix)
test_inv = cacheSolve(test_cache)
test_inv
test_cache
test_cache$get()
test_cache$getinverse()
test_matrix = matrix(c(4,2,7,6), 2,2)
test_matrix = matrix(c(2,1,7,3,0,2,5,8,6), 3,3)
test_cache = makeCacheMatrix(test_matrix)
test_cach
test_cache
test_cache$get(0)
test_cache$get()
test_cache$getinverse()
test_inverse <- cacheSolve(test_cache)
test_inverse
test_cache$getinverse()
source('~/Google Drive/Coursera/JHU Data Sci Specialization/02 R Programming/02 Programming/ProgrammingAssignment2/cachematrix.R')
test_matrix <- matrix(c(1,1,2,1,3,3,4,5,3,6,0,2,6,7,3,3),4,4)
test_matrix
solve(test_matrix)
test_cache = makeCacheMatrix(test_matrix)
test_cache$get()
test_cache$getinverse()
test_solution <- cacheSolve(test_cache)
test_cache$getinverse()
makeCacheMatrix()$get
makeCacheMatrix()$getinverse
